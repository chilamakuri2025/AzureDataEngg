-- hr.employee table data
-- select * from HR.EMPLOYEES
--counting no.of employess in each dept  once it done groupby
SELECT department_id, count(*) as total_employess
from HR.EMPLOYEES
group by department_id;

------
--avg salary based on dept id
select department_id, avg(salary) as avg_salary
from hr.EMPLOYEES
group by department_id;


---min and max salaries based on dept ids
select department_id, max(salary) as max_salary, min(salary) as min_salary
from hr.EMPLOYEES
group by department_id;


--sum of employess salary in each dept
select department_id, sum(salary) as total_salary
from hr.EMPLOYEES
group by department_id;

--how many employess for each job id
select job_id, count(*) as total_employess
from hr.EMPLOYEES
group by JOB_ID;

--avg salary based on job id
select JOB_ID, avg(salary) as avg_salary
from hr.EMPLOYEES
group by JOB_ID;


--max salary based on job id
select job_id, max(salary) as max_salary
from hr.EMPLOYEES
group by job_id;


--min salary based on job id
select JOB_ID, MIN(salary) as min_salary
from hr.EMPLOYEES
group by JOB_ID;


--toatl sum of salary by job id
select JOB_ID, sum(salary) as total_salary
from hr.EMPLOYEES
group by JOB_ID;

--extarcting employee hired year
select EXTRACT(YEAR FROM hire_date) as hire_year, count(*) as total_employess
from hr.EMPLOYEES
group by Extract(YEAR FROM hire_date)
order by hire_year;

---total salary by locationid
SELECT d.location_id, SUM(e.SALARY) AS total_salary
FROM hr.EMPLOYEES e
JOIN hr.DEPARTMENTS d ON e.department_id = d.department_id
GROUP BY d.location_id;

-- Based on manger id finding team size

select MANAGER_ID, count(*) as team_size
from hr.EMPLOYEES
where MANAGER_ID IS NOT NULL 
group by MANAGER_ID;

-- select * from hr.EMPLOYEES
-- max salary by mangerid & managerid should not be null

select MANAGER_ID, max(salary) as max_salary
from hr.EMPLOYEES
where MANAGER_ID IS NOT NULL
group by MANAGER_ID;

-- avg salary by mangerid & managerid should not be null

select MANAGER_ID, AVG(salary) as avg_salary
from hr.EMPLOYEES
where MANAGER_ID IS NOT NULL
group by MANAGER_ID;

--based on month how many employess hired

select EXTRACT(month from hire_date) as hire_month, count(*) as total_hired
from hr.EMPLOYEES
group by EXTRACT(month from HIRE_DATE)
order by hire_month;

--highest salry by deptid

select department_id, sum(salary) as total_salary
from hr.EMPLOYEES
group by DEPARTMENT_ID
order by total_salary DESC;

--highest salary by jobid


select job_id, avg(salary) as avg_salary
from hr.EMPLOYEES
group by JOB_ID
ORDER by avg_salary desc;

--toal employess based on city
select l.city, count(*) as total_employess
from hr.EMPLOYEES e
join hr.DEPARTMENTS d ON e.DEPARTMENT_ID = d.DEPARTMENT_ID
join hr.locations l ON d.location_id = l.location_id
group by l.city;

--department id  total count based commision

select department_id, count(*) as employees_with_commission
from hr.EMPLOYEES
where commission_pct IS NOT NULL
group by department_id;

-- department id  total salary sum based commision

select department_id, sum(salary) as toatl_salary_with_commision
from hr.EMPLOYEES
where COMMISSION_PCT IS NOT NULL
group by DEPARTMENT_ID;




---- questins agreegations
---Count the number of sales transactions for each product.

SELECT PROD_ID, COUNT(*) AS TOTAL_TRANSACTIONS
FROM sh.SALES
GROUP BY PROD_ID;


--Find the average sale amount for each product. 

select * from sh.SALES
SELECT PROD_ID, AVG(AMOUNT_SOLD) AS AVERAGE_SALE_AMOUNT
FROM sh.SALES
GROUP BY PROD_ID;

--Find the maximum and minimum sale amount for each product.

SELECT PROD_ID, 
       MAX(AMOUNT_SOLD) AS MAX_SALE_AMOUNT, 
       MIN(AMOUNT_SOLD) AS MIN_SALE_AMOUNT
FROM sh.SALES
GROUP BY PROD_ID;

--Find the total revenue generated by each product.

SELECT PROD_ID, 
       SUM(AMOUNT_sold) AS TOTAL_REVENUE
FROM sh.SALES
GROUP BY PROD_ID;

--Count the number of sales transactions for each customer.

SELECT CUST_ID, 
       COUNT(*) AS TOTAL_TRANSACTIONS
FROM sh.SALES
GROUP BY CUST_ID;

--Find the average sale amount per customer.

SELECT CUST_ID, 
       AVG(AMOUNT_SOLD) AS AVERAGE_SALE_AMOUNT
FROM sh.SALES
GROUP BY CUST_ID;
-- Find the highest purchase amount for each customer.


SELECT CUST_ID, 
       MAX(AMOUNT_sold) AS HIGHEST_PURCHASE_AMOUNT
FROM sh.SALES
GROUP BY CUST_ID;

-- Find the lowest purchase amount for each customer. 
SELECT CUST_ID, 
     Min(AMOUNT_sold) AS LOWEST_PURCHASE_AMOUNT
FROM sh.SALES
GROUP BY CUST_ID;












